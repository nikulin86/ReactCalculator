{"version":3,"sources":["store.js","Class.js","Hook.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["store","buttons","val","operations","Class","state","out","refREf","React","createRef","value","currentValue","outRef","this","current","setState","tapeNames","length","substring","eval","setTimeout","className","ref","type","defaultValue","map","item","keys","onClick","tapeName","Component","Hook","stateValue","useState","count","setCount","setOut","useRef","Navbar","activeClassName","to","exact","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb97525.chunk.js","sourcesContent":["let store = {\r\n    buttons: [\r\n        { val: '1' }, { val: '2' }, { val: '3' }, { val: '4' }, { val: '5' }, { val: '6' }, { val: '7' }, { val: '8' }, { val: '9' }, { val: '0' }, { val: '-' }, { val: '+' }, { val: '*' }, { val: '/' }, { val: '.' } ],\r\n\r\n        operations: [{ val: 'CE' }, { val: 'C' },{ val: '=' }, ]\r\n}\r\n\r\nexport default store","// eslint-disable-next-line\r\nimport React from 'react';\r\nimport './App.css';\r\nimport store from './store';\r\n\r\n\r\nclass Class extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      out: '0'\r\n    }\r\n    \r\n    this.refREf = React.createRef()\r\n  }\r\n\r\n tapeName(value) {\r\n    let currentValue = value\r\n    let outRef = this.refREf.current\r\n\r\n    this.setState({\r\n      out: currentValue\r\n    })\r\n \r\n    if(outRef.value === '0') {outRef.value = ''}\r\n    outRef.value += currentValue\r\n  }\r\n\r\n\r\n\r\n  tapeNames(value) {\r\n    let outRef = this.refREf.current\r\n\r\n  \r\n    if (value === 'CE') {\r\n      outRef.value.length === 1 ? outRef.value = '0' : outRef.value = outRef.value.substring(0, outRef.value.length - 1)\r\n    }\r\n\r\n    else if(value === 'C') {outRef.value = '0'}\r\n    else if(value === '=') {\r\n      try{\r\n        outRef.value = eval(outRef.value)\r\n      }catch{\r\n        outRef.value  = 'error'\r\n        setTimeout(() => {outRef.value = '0'}, 1500)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"input\">\r\n          <input ref={this.refREf} type=\"text\" defaultValue={this.state.out}/>\r\n        </div>\r\n        <div className=\"buttons-button\">\r\n        {store.buttons.map((item, keys) =>  <button key={keys} onClick={()=> {this.tapeName(item.val)}}>{item.val}</button>)}\r\n        </div>\r\n        <div className=\"buttons-operations\">\r\n        {store.operations.map((item, keys) =>  <button key={keys} onClick={()=> {this.tapeNames(item.val)}}>{item.val}</button>)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Class;","// eslint-disable-next-line\r\nimport React, {useState, useRef} from 'react';\r\n\r\n\r\nexport const Hook = () => {\r\n  let stateValue = {\r\n    buttons: [\r\n        { val: '1' }, { val: '2' }, { val: '3' }, { val: '4' }, { val: '5' }, { val: '6' }, { val: '7' }, { val: '8' }, { val: '9' }, { val: '0' }, { val: '-' }, { val: '+' }, { val: '*' }, { val: '/' }, { val: '.' } ],\r\n\r\n        operations: [{ val: 'CE' }, { val: 'C' },{ val: '=' }, ]\r\n}\r\n\r\n    const [count, setCount] = useState(stateValue);\r\n    const [out, setOut] = useState('0');\r\n    const refREf = useRef()\r\n \r\n    const tapeName=(value) =>{\r\n      let currentValue = value\r\n      let outRef = refREf.current\r\n  \r\n      setCount({\r\n        out: currentValue\r\n      })\r\n   \r\n      if(outRef.value === '0') {outRef.value = ''}\r\n      outRef.value += currentValue\r\n    }\r\n  \r\n  \r\n  \r\n    const tapeNames = (value) => {\r\n      let outRef = refREf.current\r\n  \r\n    \r\n      if (value === 'CE') {\r\n        outRef.value.length === 1 ? outRef.value = '0' : outRef.value = outRef.value.substring(0, outRef.value.length - 1)\r\n      }\r\n  \r\n      else if(value === 'C') {outRef.value = '0'}\r\n      else if(value === '=') {\r\n        try{\r\n          outRef.value = eval(outRef.value)\r\n        }catch{\r\n          outRef.value  = 'error'\r\n          setTimeout(() => {outRef.value = '0'}, 1500)\r\n        }\r\n      }\r\n  \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"input\">\r\n          <input ref={refREf} type=\"text\" defaultValue={out}/>\r\n        </div>\r\n        <div className=\"buttons-button\">\r\n        {stateValue.buttons.map((item, keys) =>  <button key={keys} onClick={()=> {setCount(tapeName(item.val))}}>{item.val}</button>)}\r\n        </div>\r\n        <div className=\"buttons-operations\">\r\n        {stateValue.operations.map((item, keys) =>  <button key={keys} onClick={()=> {setCount(tapeNames(item.val))}}>{item.val}</button>)}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Hook;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>React Ð¡alculator</h1>\r\n            <ul className=\"navbar-list\">\r\n                <li className=\"\">\r\n                    <NavLink className=\"navbar-list_item\" activeClassName=\"active\" to=\"/\" exact >Class</NavLink>\r\n                </li>\r\n                <li className=\"\">\r\n                    <NavLink className=\"navbar-list_item\" to=\"/hook\">Hook</NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Class from './Class';\nimport Hook from './Hook';\nimport Navbar from './Navbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route path={'/'} exact component={Class} />\n        <Route path={'/hook'} exact component={Hook} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}